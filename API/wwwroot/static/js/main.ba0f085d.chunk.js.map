{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","features/activities/dashboard/ActivityFilter.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttende.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextInput.tsx","app/common/form/MyTextArea.tsx","features/activities/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetails.tsx","features/users/LoginForm.tsx","features/activities/errors/ValidationError.tsx","features/users/RegisterForm.tsx","app/home/HomePage.tsx","app/layout/navbar.tsx","features/activities/errors/TestError.tsx","features/activities/errors/NotFound.tsx","features/activities/errors/ServerError.tsx","app/common/modals/ModalConainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","paginaiton","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSelectedActivity","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","vertical","size","style","width","marginTop","Header","icon","attached","color","Item","active","has","onClick","onChange","Reveal","animated","Content","visible","Button","fluid","hidden","basic","e","preventDefault","handleFollow","Card","as","Link","to","Image","src","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","ActivityListItemAttende","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","ActivityFilter","Loader","LoadingComponent","inverted","Dimmer","MyTextInput","props","useField","field","meta","Form","Field","touched","label","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","Value","onBlur","setTouched","placeholder","categoryOptions","text","MyDateInput","selected","useHistory","useParams","ValidationSchema","Yup","required","nullable","validationSchema","enableReinitialize","initialValues","onSubmit","uuid","handleFormSubmit","handleSubmit","isValid","isSubmitting","dirty","className","autoComplete","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","positive","type","border","resetForm","position","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","relaxed","divided","verticalAlign","Extra","email","password","setErrors","render","ValidationErrors","Message","err","i","Container","alt","isLoggedIn","Divider","fixed","NavLink","exact","header","marginRight","avatar","spaced","Dropdown","pointing","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","menu","menuPosition","onTabChange","activeIndex","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.ba0f085d.chunk.js","sourcesContent":["// import { Pagination } from './pagination';\n\n\nexport interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n     totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    data: T;\n    pagination: Pagination;\n\n    constructor(data: T, paginaiton: Pagination) {\n        this.data = data;\n        this.pagination = paginaiton;\n    }\n}\n\nexport class PagingParams {\n    pageNumber;\n    pageSize;\n\n    constructor(pageNumber = 1, pageSize = 2) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n    }\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { PaginatedResult } from '../models/pagination';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\n\nconst sleep = (delay: number) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay)\n    })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if(process.env.NODE_ENV === 'development') await sleep(1000);\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n        return response as AxiosResponse<PaginatedResult<any>>\n    }\n    return response;\n}, (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n        case 400:\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n                history.push('/not-found');\n            }\n            if (data.errors) {\n                const modalStateErrors = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modalStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modalStateErrors.flat();\n            } else {\n                toast.error(data);\n            }\n            break;\n        case 401:\n            toast.error('unauthorised');\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            store.commonStore.setServerError(data);\n            history.push('/server-error');\n            break;\n    }\n    return Promise.reject(error);\n})\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\n        .then(responseBody),\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n    current: () => requests.get<User>('/account'),\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\n    fbLogin: (accessToken: string) =>requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {})\n}\n\nconst Profiles = {\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n    uploadPhoto: (file: Blob) => {\n        let formData = new FormData();\n        formData.append('File', file);\n        return axios.post<Photo>('photos', formData, {\n            headers: { 'Content-type': 'multipart/form-data' }\n        })\n    },\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n    listFollowings: (username: string, predicate: string) =>\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n    listActivities: (username: string, predicate: string) =>\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n    Activities,\n    Account,\n    Profiles\n}\n\nexport default agent;","import { Profile } from \"./profile\";\n\nexport interface Activity {\n    id: string;\n    title: string;\n    date: Date | null;\n    description: string;\n    category: string;\n    city: string;\n    venue: string;\n    hostUsername: string;\n    isCancelled: boolean;\n    isGoing: boolean;\n    isHost: boolean;\n    host?: Profile;\n    attendees: Profile[]\n  }\n\n  export class Activity implements Activity {\n    constructor(init?: ActivityFormValues) {\n      Object.assign(this, init);\n    }\n  }\n\n  export class ActivityFormValues {\n    id?: string = undefined;\n    title: string = '';\n    category: string = '';\n    description: string = '';\n    date: Date | null = null;\n    city: string = '';\n    venue: string = '';\n\n    constructor(activity?: ActivityFormValues) {\n      if (activity) {\n        this.id = activity.id;\n        this.title = activity.title;\n        this.category = activity.category;\n        this.description = activity.description;\n        this.date = activity.date;\n        this.venue = activity.venue;\n        this.city = activity.city;\n      }\n    }\n  }","import { User } from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    bio?: string;\n    followersCount : number;\n    followingCount : number;\n    following: boolean;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string;\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport {format} from 'date-fns';\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n    activityRegistry = new Map<string, Activity>();\n    selectedActivity: Activity | undefined = undefined;\n    editMode = false;\n    loading = false;\n    loadingInitial = false;\n    pagination: Pagination | null = null;\n    pagingParams = new PagingParams();\n    predicate = new Map().set('all', true);\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.predicate.keys(),\n            () => {\n                this.pagingParams = new PagingParams();\n                this.activityRegistry.clear();\n                this.loadActivities();\n            }\n        )\n    }\n\n    setPagingParams = (pagingParams: PagingParams) => {\n        this.pagingParams = pagingParams;\n    }\n\n    setPredicate = (predicate: string, value: string | Date) => {\n        const resetPredicate = () => {\n            this.predicate.forEach((value, key) => {\n                if (key !== 'startDate') this.predicate.delete(key);\n            })\n        }\n        switch (predicate) {\n            case 'all':\n                resetPredicate();\n                this.predicate.set('all', true);\n                break;\n            case 'isGoing':\n                resetPredicate();\n                this.predicate.set('isGoing', true);\n                break;\n            case 'isHost':\n                resetPredicate();\n                this.predicate.set('isHost', true);\n                break;\n            case 'startDate':\n                this.predicate.delete('startDate');\n                this.predicate.set('startDate', value);\n        }\n    } \n\n    get axiosParams() {\n        const params = new URLSearchParams();\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\n        params.append('pageSize', this.pagingParams.pageSize.toString());\n        this.predicate.forEach((value, key) => {\n            if (key === 'startDate') {\n                params.append(key, (value as Date).toISOString())\n            } else {\n                params.append(key, value);\n            }\n        })\n        return params;\n    }\n\n    get activitiesByDate() {\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\n            a.date!.getTime() - b.date!.getTime());\n    }\n\n    get groupedActivities() {\n        return Object.entries(\n            this.activitiesByDate.reduce((activities, activity) => {\n                const date = format(activity.date!, 'dd MMM yyyy');\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n                return activities;\n            }, {} as {[key: string]: Activity[]})\n        )\n    }\n\n    loadActivities = async () => {\n        this.loadingInitial = true;\n        try {\n            const result = await agent.Activities.list(this.axiosParams);\n            result.data.forEach(activity => {\n                this.setActivity(activity);\n            })\n            this.setPagination(result.pagination);\n            this.setLoadingInitial(false);\n        } catch (error) {\n            console.log(error);\n            this.setLoadingInitial(false);\n        }\n    }\n\n    setPagination = (pagination: Pagination) => {\n        this.pagination = pagination;\n    }\n\n    loadActivity = async (id: string) => {\n        let activity = this.getActivity(id);\n        if (activity) {\n            this.selectedActivity = activity;\n            return activity;\n        } else {\n            this.loadingInitial = true;\n            try {\n                activity = await agent.Activities.details(id);\n                this.setActivity(activity);\n                runInAction(() => {\n                    this.selectedActivity = activity;\n                })\n                this.setLoadingInitial(false);\n                return activity;\n            } catch (error) {\n                console.log(error);\n                this.setLoadingInitial(false);\n            }\n        }\n    }\n\n    private setActivity = (activity: Activity) => {\n        const user = store.userStore.user;\n        if (user) {\n            activity.isGoing = activity.attendees!.some(\n                a => a.username === user.username\n            )\n            activity.isHost = activity.hostUsername === user.username;\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n        }\n        activity.date = new Date(activity.date!);\n        this.activityRegistry.set(activity.id, activity);\n    }\n\n    private getActivity = (id: string) => {\n        return this.activityRegistry.get(id);\n    }\n\n    setLoadingInitial = (state: boolean) => {\n        this.loadingInitial = state;\n    }\n\n    createActivity = async (activity: ActivityFormValues) => {\n        const user = store.userStore.user;\n        const attendee = new Profile(user!);\n        try {\n            await agent.Activities.create(activity);\n            const newActivity = new Activity(activity);\n            newActivity.hostUsername = user!.username;\n            newActivity.attendees = [attendee];\n            this.setActivity(newActivity);\n            runInAction(() => {\n                this.selectedActivity = newActivity;\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    updateActivity = async (activity: ActivityFormValues) => {\n        try {\n            await agent.Activities.update(activity);\n            runInAction(() => {\n                if (activity.id) {\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity}\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\n                    this.selectedActivity = updatedActivity as Activity;\n                } \n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    deleteActivity = async (id: string) => {\n        this.loading = true;\n        try {\n            await agent.Activities.delete(id);\n            runInAction(() => {\n                this.activityRegistry.delete(id);\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loading = false;\n            })\n        }\n    }\n\n    updateAttendance = async () => {\n        const user = store.userStore.user;\n        this.loading = true;\n        try {\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                if (this.selectedActivity?.isGoing) {\n                    this.selectedActivity.attendees = \n                        this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n                    this.selectedActivity.isGoing = false;\n                } else {\n                    const attendee = new Profile(user!);\n                    this.selectedActivity?.attendees?.push(attendee);\n                    this.selectedActivity!.isGoing = true;\n                }\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\n            })\n        } catch (error) {\n            console.log(error);\n        } finally {\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    cancelActivityToggle = async () => {\n        this.loading = true;\n        try {\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n            })\n        } catch (error) {\n            console.log(error);\n        } finally {\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    updateAttendeeFollowing = (username: string) => {\n        this.activityRegistry.forEach(activity => {\n            activity.attendees.forEach(attendee => {\n                if (attendee.username === username) {\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n                    attendee.following = !attendee.following;\n                }\n            })\n        })\n    }\n\n    clearSelectedActivity = () => {\n        this.selectedActivity = undefined;\n    }\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n    followings: Profile[] = [];\n    loadingFollowings = false;\n    activeTab = 0;\n    userActivities: UserActivity[] = [];\n    loadingActivities = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.activeTab,\n            activeTab => {\n                if (activeTab === 3 || activeTab === 4) {\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\n                    this.loadFollowings(predicate);\n                } else {\n                    this.followings = [];\n                }\n            }\n        )\n    }\n\n    setActiveTab = (activeTab: any) => {\n        this.activeTab = activeTab;\n    }\n\n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.username === this.profile.username;\n        }\n        return false;\n    }\n\n    loadProfile = async (username: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(username);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n    uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos?.push(photo);\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n                this.uploading = false;\n            })\n        } catch (error) {   \n            console.log(error);\n            runInAction(() => this.uploading = false);\n        }\n    }\n\n    setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    updateProfile = async (profile: Partial<Profile>) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateProfile(profile);\n            runInAction(() => {\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n                    store.userStore.setDisplayName(profile.displayName);\n                }\n                this.profile = {...this.profile, ...profile as Profile};\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    updateFollowing = async (username: string, following: boolean) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateFollowing(username);\n            store.activityStore.updateAttendeeFollowing(username);\n            runInAction(() => {\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\n                    this.profile.following = !this.profile.following;\n                }\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\n                }\n                this.followings.forEach(profile => {\n                    if (profile.username === username) {\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\n                        profile.following = !profile.following;\n                    }\n                })\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    loadFollowings = async (predicate: string) => {\n        this.loadingFollowings = true;\n        try {\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n            runInAction(() => {\n                this.followings = followings;\n                this.loadingFollowings = false;\n            })\n        } catch (error) {\n            runInAction(() => this.loadingFollowings = false);\n        }\n    }\n\n    loadUserActivities = async (username: string, predicate?: string) => {\n        this.loadingActivities = true;\n        try {\n            const activities = await agent.Profiles.listActivities(username, predicate!);\n            runInAction(() => {\n                this.userActivities = activities;\n                this.loadingActivities = false;\n            })    \n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loadingActivities = false;\n            })\n         } \n    }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    user: User | null = null;\n    fbAccessToken: string | null = null;\n    fbLoading = false;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n\n    getUser = async () => {\n        try {\n            const user = await agent.Account.current();\n            runInAction(() => this.user = user);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    register = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.register(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    setImage = (image: string) => {\n        if (this.user) this.user.image = image;\n    } \n\n    setDisplayName = (name: string) => {\n        if (this.user) this.user.displayName = name;\n    }\n\n    getFacebookLoginStatus = async () => {\n        window.FB.getLoginStatus(response => {\n            if (response.status === 'connected') {\n                this.fbAccessToken = response.authResponse.accessToken;\n            }\n        })\n    }\n\n    facebookLogin = () => {\n        this.fbLoading = true;\n        const apiLogin = (accessToken: string) => {\n            agent.Account.fbLogin(accessToken).then(user => {\n                store.commonStore.setToken(user.token);\n                runInAction(() => {\n                    this.user = user;\n                    this.fbLoading = false;\n                })\n                history.push('/activities');\n            }).catch(error => {\n                console.log(error);\n                runInAction(() => this.fbLoading = false);\n            })\n        }\n        if (this.fbAccessToken) {\n            apiLogin(this.fbAccessToken);\n        } else {\n            window.FB.login(response => {\n                apiLogin(response.authResponse.accessToken);\n            }, {scope: 'public_profile,email'})\n        }\n    }\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n    activityStore: ActivityStore;\n    commonStore: CommonStore;\n    userStore: UserStore;\n    modalStore: ModalStore;\n    profileStore: ProfileStore;\n    commentStore: CommentStore\n}\n\nexport const store: Store = {\n    activityStore: new ActivityStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    profileStore: new ProfileStore(),\n    commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}\n\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n    error: ServerError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.token,\n            token => {\n                if(token) {\n                    window.localStorage.setItem('jwt', token)\n                }else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        )\n    }\n    \n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n    comments: ChatComment[] = [];\n    hubConnection: HubConnection | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    createHubConnection = (activityId: string) => {\n        if (store.activityStore.selectedActivity) {\n            this.hubConnection = new HubConnectionBuilder()\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n                    accessTokenFactory: () => store.userStore.user?.token!\n                })\n                .withAutomaticReconnect()\n                .configureLogging(LogLevel.Information)\n                .build();\n\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n                runInAction(() => {\n                    comments.forEach(comment => {\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\n                    })\n                    this.comments = comments\n                });\n            })\n\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n                runInAction(() => {\n                    comment.createdAt = new Date(comment.createdAt);\n                    this.comments.unshift(comment)\n                });\n            })\n        }\n    }\n\n    stopHubConnection = () => {\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\n    }\n\n    clearComments = () => {\n        this.comments = [];\n        this.stopHubConnection();\n    }\n\n    addComment = async (values: any) => {\n        values.activityId = store.activityStore.selectedActivity?.id;\n        try {\n            await this.hubConnection?.invoke('SendComment', values);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n}","import React from 'react';\nimport { Header, Menu } from 'semantic-ui-react';\nimport Calendar from 'react-calendar';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer (function ActivtyFilters() {\n    const {activityStore: {predicate, setPredicate}} = useStore();\n    return (\n        <>\n        <Menu vertical size='large' style={{width: '100%', marginTop:25}}>\n            <Header icon='filter' attached color='teal' content='Filters' />\n            <Menu.Item content='All Activites' \n                active={predicate.has('all')}\n                onClick={() => setPredicate('all', 'true')}\n            />\n            <Menu.Item content=\"I'm going\"\n                active={predicate.has('all')}\n                onClick={() => setPredicate('isGoing', 'true')}\n            />\n            <Menu.Item content=\"I'm hosting\"\n                active={predicate.has('isHost')}\n                onClick={() => setPredicate('isHost', 'true')}\n            />\n        </Menu>\n        <Header />\n        <Calendar\n        onChange={(date) => setPredicate('startDate', date as Date)}\n        value={predicate.get('startDate') || new Date()}\n        />\n        </>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent } from 'react';\nimport { Reveal, Button } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\n\ninterface Props {\n    profile: Profile;\n}\n\n\nexport default observer(function FollowButton({profile}: Props) {\n    const {profileStore, userStore} = useStore();\n    const {updateFollowing, loading} = profileStore;\n\n    if(userStore.user?.username === profile.username) return null;\n\n    function handleFollow(e: SyntheticEvent, username: string) {\n        e.preventDefault();\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true)\n    }\n\n    return (\n        <Reveal animated='move'>\n                        <Reveal.Content visible style={{width: '100%'}}>\n                            <Button fluid color='teal' content={profile.following ? 'Following' : 'Not following'}/>\n                        </Reveal.Content>\n                        <Reveal.Content hidden style={{width: '100%'}}>\n                            <Button \n                                fluid \n                                basic\n                                color={profile.following ? 'red' : 'green'} \n                                content={profile.following ? 'Unfollow' : 'Follow'}\n                                loading={loading}\n                                onClick={(e) => handleFollow(e, profile.username)}\n                            />\n                        </Reveal.Content>\n                    </Reveal>\n    )  \n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileCard({profile}: Props) {\n    function truncate(str: string | undefined) {\n        if (str) {\n            return str.length > 40 ? str.substring(0, 37) + '...' : str;\n        }\n    }\n\n    return (\n        <Card as={Link} to={`/profiles/${profile.username}`}>\n            <Image src={profile.image || '/assets/user.png'} />\n            <Card.Content>\n                <Card.Header>\n                    {profile.displayName}\n                </Card.Header>\n                <Card.Description>\n                {truncate(profile.bio)}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <Icon name='user' />\n                {profile.followersCount} followers\n                <FollowButton profile={profile}/>\n            </Card.Content>\n        </Card>\n    )\n\n})","import { observer } from 'mobx-react-lite';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../app/models/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props {\n    attendees: Profile[];\n}\n\nexport default observer(function  ActivityListItemAttendee({attendees}: Props) {\n    const styles = {\n        borderColor: 'orange',\n        borderWidth: 3\n    }\n\n    return (\n        <List horizontal>\n            {attendees.map(attendee => (\n                <Popup hoverable key={attendee.username}\n                trigger= {\n                    <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n                <Image \n                size='mini'\n                circular \n                src={attendee.image || '/assets/user.png'}/>\n                bordered\n                style={attendee.following ? styles : null}\n            </List.Item>    \n                }\n                >\n                   <Popup.Content>\n                       <ProfileCard profile={attendee} />\n                       </Popup.Content>     \n                </Popup>\n                \n            ))}\n        </List>\n    )\n    \n})","import { Link } from 'react-router-dom';\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport {format} from 'date-fns';\nimport ActivityListItemAttendee from './ActivityListItemAttende';\n\ninterface Props {\n    activity: Activity\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n\n    return (\n        <Segment.Group>\n            <Segment>\n                {activity.isCancelled &&\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\n                }\n                <Item.Group>\n                    <Item>\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png' }/>\n                        <Item.Content>\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                                {activity.title}\n                            </Item.Header>\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\n                            {activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color='orange'>\n                                        You are hosting this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                            {activity.isGoing && !activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color='green'>\n                                        You are going to this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n            <Segment>\n                <span>\n                    <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n                    <Icon name='marker' /> {activity.venue}\n                </span>\n            </Segment>\n            <Segment secondary>\n                <ActivityListItemAttendee attendees={activity.attendees!} />\n            </Segment>\n            <Segment clearing>\n                <span>{activity.description}</span>\n                <Button \n                    as={Link}\n                    to={`/activities/${activity.id}`}\n                    color='teal'\n                    floated='right'\n                    content='View'\n                />\n            </Segment>\n        </Segment.Group>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n    const {activityStore} = useStore();\n    const { groupedActivities} = activityStore;\n\n  \n    return (\n        <>\n        {groupedActivities.map(([group, activities]) => (\n            <Fragment key={group}>\n                <Header sub color='teal'>\n                    {group}\n                </Header>\n            \n                {activities.map(activity => (\n                  <ActivityListItem key={activity.id} activity={activity}/>\n                ))}\n            </Fragment>\n        ))}\n        </>\n               \n    )\n})","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport { PagingParams } from '../../../app/models/pagination';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityFilters from './ActivityFilter';\nimport ActivityList from './ActivityList';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n    const { activityStore } = useStore();\n    const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\n    const [loadingNext, setLoadingNext] = useState(false);\n\n    function handleGetNext() {\n        setLoadingNext(true);\n        setPagingParams(new PagingParams(pagination!.currentPage + 1))\n        loadActivities().then(() => setLoadingNext(false));\n    }\n\n    useEffect(() => {\n        if (activityRegistry.size <= 1) loadActivities();\n    }, [activityRegistry.size, loadActivities])\n\n    return (\n        <Grid>\n            <Grid.Column width='10'>\n                {activityStore.loadingInitial && !loadingNext ? (\n                    <>\n                        <ActivityListItemPlaceholder />\n                        <ActivityListItemPlaceholder />\n                    </>\n                ) : (\n                        <InfiniteScroll\n                            pageStart={0}\n                            loadMore={handleGetNext}\n                            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n                            initialLoad={false}\n                        >\n                            <ActivityList />\n                        </InfiniteScroll>\n                    )}\n            </Grid.Column>\n            <Grid.Column width='6'>\n                <ActivityFilters />\n            </Grid.Column>\n            <Grid.Column width={10}>\n                <Loader active={loadingNext} />\n            </Grid.Column>\n        </Grid>\n    )\n})","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n    inverted?: boolean;\n    content?: string\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content}/>\n        </Dimmer>\n    )\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props}/>\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null }\n        </Form.Field>\n    )\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    rows: number;\n    label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <textarea {...field} {...props}/>\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null }\n        </Form.Field>\n    )\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n    const [field, meta, helpers] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <Select \n                clearable\n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.Value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null }\n        </Form.Field>\n    )\n}","export const categoryOptions = [\n    {text: 'Drinks', value: 'drinks'},\n    {text: 'Culture', value: 'culture'},\n    {text: 'Film', value: 'film'},\n    {text: 'Food', value: 'food'},\n    {text: 'Music', value: 'music'},\n    {text: 'Travel', value: 'travel'}\n\n]","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\n\n\nexport default function MyDateInput(props: Partial <ReactDatePickerProps>) {\n    const [field, meta, helpers] = useField(props.name!);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n           <DatePicker \n            {...field}\n            {...props}\n            selected={(field.value && new Date(field.value)) || null}\n            onChange={value => helpers.setValue(value)}\n           />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ) : null }\n        </Form.Field>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Button,  Header,  Segment } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from './MySelectInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport MyDateInput from './MyDateInput';\nimport { Activity, ActivityFormValues } from '../../../app/models/activity';\nimport { v4 as uuid } from 'uuid';\n\nexport default observer(function ActivityForm() {\n    const history = useHistory();\n    const {activityStore} = useStore();\n    const {createActivity, updateActivity, \n            loading, loadActivity, loadingInitial} = activityStore;\n    const {id} = useParams<{id: string}>();\n\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n    const ValidationSchema = Yup.object({\n        title: Yup.string().required('The activity title is required'),\n        description: Yup.string().required('The activity describtion is required'),\n        category: Yup.string().required(),\n        date: Yup.string().required('Date is required').nullable(),\n        venue: Yup.string().required(),\n        city: Yup.string().required(),\n\n    })\n\n    useEffect(() => {\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity!)))\n    }, [id, loadActivity]);\n\n    function handleFormSubmit(activity: ActivityFormValues) {\n        if (!activity.id) {\n            let newActivity = {\n                ...activity,\n                id: uuid()\n            };\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\n        } else {\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\n        }\n    }\n\n   \n\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\n\n    return (\n        <Segment clearing>\n            <Header content='Activity Details' sub color='teal'/>\n            <Formik  \n            validationSchema={ValidationSchema}\n            enableReinitialize\n            initialValues={activity} \n            onSubmit={values => handleFormSubmit(values)}>\n                {({handleSubmit, isValid, isSubmitting, dirty}) => (\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                      <MyTextInput name='title' placeholder='Title' />\n                    <MyTextArea rows={3} placeholder='Description'  name='description' />\n                    <MySelectInput options={categoryOptions} placeholder='Category'  name='category' />\n                    <MyDateInput  \n                    placeholderText='Date'  \n                    name='date'\n                    showTimeSelect\n                    timeCaption = 'time'\n                    dateFormat = 'MMMM d, yyyy h:mm aa' />\n                    <Header content='LOcation Details' sub color='teal'/>\n                    <MyTextInput placeholder='City'  name='city'/>\n                    <MyTextInput placeholder='Venue'  name='venue'/>\n                    <Button \n                    disabled={isSubmitting || !dirty || !isValid}\n                    loading={isSubmitting} floated='right' positive type='submit' content='Submit' />\n                    <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\n                </Form>\n                )}\n            </Formik>\n        </Segment>\n    )\n})","import { Formik, Form, Field, FieldProps } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react'\nimport { useStore } from '../../../app/stores/store';\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from 'date-fns'\n\ninterface Props {\n    activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n    const { commentStore } = useStore();\n\n    useEffect(() => {\n        if (activityId) {\n            commentStore.createHubConnection(activityId);\n        }\n        return () => {\n            commentStore.clearComments();\n        }\n    }, [commentStore, activityId]);\n\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                attached='top'\n                inverted\n                color='teal'\n                style={{ border: 'none' }}\n            >\n                <Header>Chat about this event</Header>\n            </Segment>\n            <Segment attached clearing>\n                <Formik\n                    onSubmit={(values, { resetForm }) =>\n                        commentStore.addComment(values).then(() => resetForm())}\n                    initialValues={{ body: '' }}\n                    validationSchema={Yup.object({\n                        body: Yup.string().required()\n                    })}\n                >\n                    {({ isSubmitting, isValid, handleSubmit }) => (\n                        <Form className='ui form'>\n                            <Field name='body'>\n                                {(props: FieldProps) => (\n                                    <div style={{ position: 'relative' }}>\n                                        <Loader active={isSubmitting} />\n                                        <textarea\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\n                                            rows={2}\n                                            {...props.field}\n                                            onKeyPress={e => {\n                                                if (e.key === 'Enter' && e.shiftKey) {\n                                                    return;\n                                                }\n                                                if (e.key === 'Enter' && !e.shiftKey) {\n                                                    e.preventDefault();\n                                                    isValid && handleSubmit();\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                )}\n                            </Field>\n                        </Form>\n                    )}\n                </Formik>\n                <Comment.Group>\n                    {commentStore.comments.map(comment => (\n                        <Comment key={comment.id}>\n                            <Comment.Avatar src={comment.image || '/assets/user.png'} />\n                            <Comment.Content>\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                                    {comment.displayName}\n                                </Comment.Author>\n                                <Comment.Metadata>\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                                </Comment.Metadata>\n                                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\n                            </Comment.Content>\n                        </Comment>\n                    ))}\n                </Comment.Group>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from 'date-fns';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n    const { activityStore: { updateAttendance, loading, cancelActivityToggle } } = useStore();\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{ padding: '0' }}>\n                {activity.isCancelled &&\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\n                        ribbon color='red' content='Cancelled' />\n                }\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{ color: 'white' }}\n                                />\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {activity.isHost ? (\n                    <>\n                        <Button\n                            color={activity.isCancelled ? 'green' : 'red'}\n                            floated='left'\n                            basic\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n                            onClick={cancelActivityToggle}\n                            loading={loading}\n                        />\n                        <Button as={Link}\n                            disabled={activity.isCancelled}\n                            to={`/manage/${activity.id}`}\n                            color='orange'\n                            floated='right'>\n                            Manage Event\n                        </Button>\n                    </>\n\n                ) : activity.isGoing ? (\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n                ) : (\n                    <Button disabled={activity.isCancelled}\n                        loading={loading} onClick={updateAttendance} color='teal'>\n                            Join Activity\n                    </Button>\n                )}\n            </Segment>\n        </Segment.Group>\n    )\n})","import { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../app/models/activity'\n\ninterface Props {\n    activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\n    if (!attendees) return null;\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{ border: 'none' }}\n                attached='top'\n                secondary\n                inverted\n                color='teal'\n            >\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {attendees.map(attendee => (\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\n                            {attendee.username === host?.username &&\n                                <Label\n                                    style={{ position: 'absolute' }}\n                                    color='orange'\n                                    ribbon='right'\n                                >\n                                    Host\n                                </Label>}\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Item.Header as='h3'>\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                                </Item.Header>\n                                {attendee.following &&\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\n                            </Item.Content>\n                        </Item>\n                    ))}\n\n                </List>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport {format} from 'date-fns';\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='teal' name='info'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n            <span>\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n            </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})\n","import { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\n\nexport default observer(function ActivityDetails() {\n    const {activityStore} = useStore();\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\n    const {id} = useParams<{id: string}>();\n\n    useEffect(() => {\n        if (id) loadActivity(id);\n        return () => clearSelectedActivity();\n    }, [id, loadActivity, clearSelectedActivity]);\n\n    if (loadingInitial || !activity) return <LoadingComponent />;\n\n    return (\n       <Grid>\n           <Grid.Column width={10}>\n               <ActivityDetailedHeader activity={activity} />\n               <ActivityDetailedInfo activity={activity} />\n               <ActivityDetailedChat activityId={activity.id}/>\n           </Grid.Column>\n           <Grid.Column width={6}>\n               <ActivityDetailedSidebar activity={activity} />\n           </Grid.Column>\n       </Grid>\n    )\n})","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function LoginForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \n                setErrors({error: 'Invalid email or password'}))}\n        >\n            {({handleSubmit, isSubmitting, errors}) => (\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Login to Reactivites' color='teal' textAlign='center' />\n                    <MyTextInput name='email' placeholder='Email' />\n                    <MyTextInput name='password' placeholder='Password' type='password' />\n                    <ErrorMessage \n                        name='error' render={() => \n                        <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\n                    />\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n                </Form>\n            )}\n        </Formik>\n    )\n})","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props) {\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../activities/errors/ValidationError';\n\nexport default observer(function RegisterForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{displayName: '',username: '',email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \n                setErrors({error: error}))}\n                validationSchema={Yup.object({\n                    displayName: Yup.string().required(),\n                    username: Yup.string().required(),\n                    email: Yup.string().required().email(),\n                    password: Yup.string().required(),\n\n                })}\n        >\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Sign up to Reactivites' color='teal' textAlign='center' />\n                    <MyTextInput name='displayName' placeholder='Display Name' />\n                    <MyTextInput name='username' placeholder='Username' />\n                    <MyTextInput name='email' placeholder='Email' />\n                    <MyTextInput name='password' placeholder='Password' type='password' />\n                    <ErrorMessage \n                        name='error' render={() => \n                        <ValidationErrors errors={errors.error}/>}\n                    />\n                    <Button disabled={!isValid || !dirty || isSubmitting}\n                        loading={isSubmitting} positive content='Login' type='submit' fluid />\n                </Form>\n            )}\n        </Formik>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Header, Segment, Image, Button, Divider } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\nimport LoginForm from '../../features/users/LoginForm';\nimport RegisterForm from '../../features/users/RegisterForm';\n\nexport default observer(function HomePage() {\n    const { userStore, modalStore } = useStore();\n    return (\n        <Segment inverted textAlign='center' vertical className='masthead'>\n            <Container text>\n                <Header as='h1' inverted>\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\n                    Reactivities\n                </Header>\n                {userStore.isLoggedIn ? (\n                    <>\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\n                        <Button as={Link} to='/activities' size='huge' inverted>\n                            Go to Activities!\n                        </Button>\n                    </>\n\n                ) : (\n                        <>\n                            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\n                                Login!\n                        </Button>\n                            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\n                                Register!\n                        </Button>\n                        <Divider horizontal inverted>Or</Divider>\n                        <Button \n                        loading={userStore.fbLoading}\n                        size='huge' inverted color='facebook' content='Login with Facebook'\n                        onClick={userStore.facebookLogin}\n                        />\n                        </>\n\n                    )}\n            </Container>\n        </Segment>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n    const { userStore: { user, logout } } = useStore();\n    return (\n        <Menu inverted fixed='top'>\n            <Container>\n                <Menu.Item as={NavLink} exact to='/' header>\n                    <img src='/assets/logo.png' alt='logo' style={{ marginRight: '10px' }} />\n                    Reactivities\n                </Menu.Item>\n                <Menu.Item as={NavLink} to='/activities' name='Activities' />\n                <Menu.Item as={NavLink} to='/errors' name='Errors' />\n                <Menu.Item>\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\n                </Menu.Item>\n                <Menu.Item position='right'>\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n                    <Dropdown pointing='top left' text={user?.displayName}>\n                        <Dropdown.Menu>\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} \n                                text='My Profile' icon='user' />\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Item>\n            </Container>\n        </Menu>\n    )\n})","import React, { useState } from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationError';\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors &&\n            <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities'></Button>\n                Return to activities page\n            </Segment.Inline>\n        </Segment>\n    )\n}\n","import { observer } from 'mobx-react-lite';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\n\nexport default observer (function ServerError() {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\n            {commonStore.error?.details &&\n            <Segment>\n                <Header as='h4' content='Stact trace' color='teal'/>\n                <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n            </Segment>\n\n            }\n        </Container>\n    )\n\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\n\n\nexport default observer (function ModalConainer() {\n    const {modalStore} = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n})","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from 'yup';\n\ninterface Props {\n    setEditMode: (editMode: boolean) => void;\n}\n\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\n    const {profileStore: {profile, updateProfile}} = useStore();\n    return (\n        <Formik\n            initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\n            onSubmit={values => {\n                updateProfile(values).then(() => {\n                    setEditMode(false);\n                })\n            }}\n            validationSchema={Yup.object({\n                displayName: Yup.string().required()\n            })}\n        >\n            {({isSubmitting, isValid, dirty}) => (\n                <Form className='ui form'>\n                    <MyTextInput placeholder='Display Name' name='displayName' />\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\n                    <Button \n                        positive\n                        type='submit'\n                        loading={isSubmitting}\n                        content='Update profile'\n                        floated='right'\n                        disabled={!isValid || !dirty}\n                    />\n                </Form>\n            )}\n        </Formik>\n    )\n})","import React, {useState} from 'react';\nimport {useStore} from \"../../app/stores/store\";\nimport {Button, Grid, Header, Tab} from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function ProfileAbout() {\n    const {profileStore} = useStore();\n    const {isCurrentUser, profile} = profileStore;\n    const [editMode, setEditMode] = useState(false);\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width='16'>\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\n                    {isCurrentUser && (\n                        <Button\n                            floated='right'\n                            basic\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\n                            onClick={() => setEditMode(!editMode)}\n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width='16'>\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\n\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})","import React from 'react';\nimport {Tab, Grid, Header, Card} from \"semantic-ui-react\";\nimport ProfileCard from \"./ProfileCard\";\nimport {useStore} from \"../../app/stores/store\";\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function ProfileFollowings() {\n    const {profileStore} = useStore();\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\n\n    return (\n        <Tab.Pane loading={loadingFollowings}>\n            <Grid>\n                <Grid.Column width='16'>\n                    <Header\n                        floated='left'\n                        icon='user'\n                        content={activeTab === 3 ? `People following ${profile!.displayName}` : `People ${profile?.displayName} is following`}\n                    />\n                </Grid.Column>\n                <Grid.Column width='16'>\n                    <Card.Group itemsPerRow={4}>\n                        {followings.map(profile => (\n                            <ProfileCard key={profile.username} profile={profile} />\n                        ))}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n    imagePreview: string;\n    setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\n    return (\n        <Cropper \n            src={imagePreview}\n            style={{height: 200, width: '100%'}}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            preview='.img-preview'\n            guides={false}\n            viewMode={1}\n            autoCropArea={1}\n            background={false}\n            onInitialized={cropper => setCropper(cropper)}\n        />\n    )\n}","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n    setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n    const dzStyles = {\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        textAlign: 'center' as 'center',\n        height: 200\n    }\n\n    const dzActive = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })))\n    }, [setFiles])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles} >\n            <input {...getInputProps()} />  \n            <Icon name='upload' size='huge' />\n            <Header content='Drop image here' />\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface Props {\n    loading: boolean;\n    uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\n    const [files, setFiles] = useState<any>([]);\n    const [cropper, setCropper] = useState<Cropper>();\n\n    function onCrop() {\n        if (cropper) {\n            cropper.getCroppedCanvas().toBlob(blob=> uploadPhoto(blob!));\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n        }\n    }, [files])\n    return (\n        <Grid>\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 1 - Add Photo' />\n                <PhotoWidgetDropzone setFiles={setFiles}/>\n            </Grid.Column>\n            <Grid.Column width={1}/>\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 2 - Resize Image' />\n                {files&& files.length > 0 && (\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n                )}\n            </Grid.Column>\n            <Grid.Column width={1}/>\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\n                {files && files.length >0 &&\n                <>\n                <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\n                <Button.Group widths={2}>\n                    <Button loading={loading} onClick={onCrop} positive icon='check' />\n                    <Button disabled={loading} onClick={() => setFiles([])} positive icon='check' />\n                </Button.Group>\n                </>}\n            </Grid.Column>\n        </Grid>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n    const { profileStore: { isCurrentUser, uploadPhoto, \n            uploading, loading, setMainPhoto, deletePhoto } } = useStore();\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\n    const [target, setTarget] = useState('');\n\n    function handlePhotoUpload(file: Blob) {\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\n    }\n\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        setMainPhoto(photo);\n    }\n\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        deletePhoto(photo);\n    }\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated='left' icon='image' content='Photos' />\n                    {isCurrentUser && (\n                        <Button floated='right' basic\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    {addPhotoMode ? (\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n                    ) : (\n                            <Card.Group itemsPerRow={5}>\n                                {profile.photos?.map(photo => (\n                                    <Card key={photo.id}>\n                                        <Image src={photo.url} />\n                                        {isCurrentUser && (\n                                            <Button.Group fluid widths={2}>\n                                                <Button \n                                                    basic\n                                                    color='green'\n                                                    content='Main'\n                                                    name={'main' + photo.id}\n                                                    disabled={photo.isMain}\n                                                    loading={target === 'main' + photo.id && loading}\n                                                    onClick={e => handleSetMainPhoto(photo, e)}\n                                                />\n                                                <Button \n                                                    basic \n                                                    color='red' \n                                                    icon='trash' \n                                                    loading={target === photo.id && loading}\n                                                    onClick={e => handleDeletePhoto(photo, e)}\n                                                    disabled={photo.isMain}\n                                                    name={photo.id}\n                                                />\n                                            </Button.Group>\n                                        )}\n                                    </Card>\n                                ))}\n                            </Card.Group>\n                        )}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n    const {profileStore} = useStore();\n\n    const panes = [\n        {menuItem: 'About', render: () => <ProfileAbout />},\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\n        {menuItem: 'Events', render: () => <Tab.Pane>Events Content</Tab.Pane>},\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\n        {menuItem: 'Following', render: () => <ProfileFollowings />},\n    ];\n\n    return (\n        <Tab \n            menu={{fluid: true, vertical: true}}\n            menuPosition='right'\n            panes={panes}\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n        />\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Divider, Grid, Header, Item, Reveal, Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile}: Props) {\n    return (\n        <Segment>\n            <Grid>\n                <Grid.Column width={12}>\n                    <Item.Group>\n                        <Item>\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Header as='h1' content={profile.displayName} />\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Statistic.Group widths={2}>\n                        <Statistic label='Followers' value={profile.followersCount} />\n                        <Statistic label='Following' value={profile.followingCount} />\n                    </Statistic.Group>\n                    <Divider />\n                    <FollowButton profile={profile}/>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nexport default observer(function ProfilePage() {\n    const { username } = useParams<{ username: string }>();\n    const { profileStore } = useStore();\n    const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n    useEffect(() => {\n        loadProfile(username);\n        return () => {\n            setActiveTab(0);\n        }\n    }, [loadProfile, username])\n\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\n\n    return (\n        <Grid>\n            <Grid.Column width={16}>\n                {profile &&\n                    <>\n                        <ProfileHeader profile={profile} />\n                        <ProfileContent profile={profile} />\n                    </>}\n            </Grid.Column>\n        </Grid>\n    )\n})","import React from \"react\";\nimport { Redirect, RouteComponentProps, RouteProps } from \"react-router\";\nimport { Route } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\n\n    interface Props extends RouteProps {\n        component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n    }\n\n    export default function PrivateRoute({component: Component, ...rest}: Props) {\n\n    const {userStore: {isLoggedIn}} = useStore();\n    return (\n        <Route \n        {...rest}\n        render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/' />}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport HomePage from '../home/HomePage';\nimport NavBar from './navbar';\nimport TestErrors from '../../features/activities/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/activities/errors/NotFound';\nimport ServerError from '../../features/activities/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalConainer from '../common/modals/ModalConainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(()=> {\n    if(commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    }else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore]) \n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...'/>\n  return (\n    <>\n    <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalConainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n              <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n              <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n              <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n              <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n              <PrivateRoute path='/errors' component={TestErrors} />\n              <Route path='/server-error' component={ServerError} />\n              <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport {  Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}